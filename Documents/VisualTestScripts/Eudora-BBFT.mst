' Template for 'WnObjPrg'
'**********************************************************************************
'
'  Eudora-BBFT.MST
'  Description      :  
'  Programmer       :  

'
'  In order for this program to run
'  it must have an INI file nominated in the Command Line.
'
'  Syntax: \FullPATH\mtrun.exe \FullPATH\Eudora-BBFT.pc6 /C WBImport.INI
'
'**********************************************************************************
'
' HISTORY:
' 04/00   Rev 1.0 Initial program creation.
'
'**********************************************************************************
'=============================================
' Metacommand declarations follow
'=============================================
'$INCLUDE 'TDECLARE.INC'
'$INCLUDE 'C:\vt\EudoraUtil.INC'

'============================================================
' Program Variables
'============================================================
Dim MainReturnInteger As Integer
Dim InitReturnInteger As Integer
'*************************************************************************
'*************************************************************************
'*  START OF SCRIPT
'*************************************************************************
'*************************************************************************
CurPrgName = "Eudora-BBFT.PCD"     ' Current program name
RevNumber  = "Rev 1.0"               ' Revision Number


' Retrieve INI file name and path from Command Line
MainReturnInteger = CheckCommandLine() 

' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Retrieving Command Line in "+CurPrgName+"!",0,LogPath,CritErrPath)
End If

' Retrieve INI file defaults
MainReturnInteger = SetDefaults("Defaults",TheIniFile)
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Setting Defaults "+CurPrgName+"!",0,LogPath,CritErrPath)
End If

' Retrieve Eudora Name and Path
MainReturnInteger = GetEudora("Eudora",TheIniFile)
	' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Finding Eudora Name "+CurPrgName+"!",0,LogPath,CritErrPath)
End If

MainReturnInteger = EudoraIsOpen()
If MainReturnInteger = False Then
	' Retrieve Eudora Name and Path
	MainReturnInteger = GetEudora("Eudora",TheIniFile)
	' Test Return Value
	If MainReturnInteger = False Then
		LogError("Error Finding Eudora Name "+CurPrgName+"!",0,LogPath,CritErrPath)
	End If


	MainReturnInteger = StartEudora()
	' Test Return Value
	If MainReturnInteger = False Then
		LogError("Error Starting Eudora!",0,LogPath,CritErrPath)
	End If
End If

' Maximize our window
InitReturnInteger = MaximizeEudora()
If InitReturnInteger = False Then
	LogWrite("1     Cannot Find Eudora Main Window", LogPath, CritErrPath)
EndIf

' Change default options
InitReturnInteger = LaunchToolsOptions()
If InitReturnInteger = True Then

		InitReturnInteger = ChangeDefaultOptions()
	If InitReturnInteger = False Then
		LogError("Error Changing Eudora Options",0,LogPath,CritErrPath)
	End If
Else
	LogError("Error Launching Eudora Options",0,LogPath,CritErrPath)
End If

' Start and send a message
MainReturnInteger = StartMessage()
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Sending New Message in SendMessage!",0,LogPath,CritErrPath)
End If

MainReturnInteger = SendaMessage()
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Starting New Message in SendaMessage!",0,LogPath,CritErrPath)
End If
' See if sending styles pops up and disable
MainReturnInteger = CheckSendingStyles()
' Test Return Value
If MainReturnInteger = False Then
	LogError("No Sending Styles Option was present",0,LogPath,CritErrPath)
End If
' Open Address book
MainReturnInteger = GetAddressBook()
' Test Return Value
If MainReturnInteger = False Then
	LogError("No Address Book was Opened",0,LogPath,CritErrPath)
End If
' Create Nicknames
MainReturnInteger = MakeNicknames2()
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Making Nicknames",0,LogPath,CritErrPath)
End If
' Close Book
MainReturnInteger = CloseAddressBook(True)
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error when closing Address Book",0,LogPath,CritErrPath)
End If

' Open Signature wazoo
MainReturnInteger = OpenSignatures()
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Opening Signatures!",0,LogPath,CritErrPath)
End If

' Create new Sigs
MainReturnInteger = CreateSignatures()
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Creating Signatures!",0,LogPath,CritErrPath)
End If
' Open stationery Wazoo
MainReturnInteger = OpenStationery()
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Opening Stationery window!",0,LogPath,CritErrPath)
End If
' Create New stationery
MainReturnInteger = CreateStationery()
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Creating Stationery!",0,LogPath,CritErrPath)
End If
' Send mails with sigs and stationeries
MainReturnInteger = UseStationeryandSignature()
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Using Stationery and Signature!",0,LogPath,CritErrPath)
End If


' Open Mailbox Wazoo
MainReturnInteger = OpenMailboxes()
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Opening Mailboxes!",0,LogPath,CritErrPath)
End If
' Create and edit mailboxes
MainReturnInteger = CreateInitialMailboxes()
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Creating Initial Mailboxes!",0,LogPath,CritErrPath)
End If


' Make filters then send mails matching filters
MainReturnInteger = InitMakeFilters()
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Opening Filters!",0,LogPath,CritErrPath)
End If

MainReturnInteger = SendFilterMails()
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Opening Filters!",0,LogPath,CritErrPath)
End If
' Send mail with ETF styles
MainReturnInteger = SendETFMail(GetPersonalityEmail("Eudora",TheIniFile), "This is an Automated ETF Message", GetGifFile("Eudora", TheIniFile))
' Test Return Value
If MainReturnInteger = False Then
	LogError("Error Sending ETF Mail!",0,LogPath,CritErrPath)
End If

